#Automating S3 infa and deploying static website on S3 accessing through OIDC.  
name: Deploy Website

on:
  push:
    branches:
    - feature/static-hosting

#Environment variables & permissions.
env:
  AWS_REGION: "us-east-1"
  OIDC_ARN: arn:aws:iam::681553805609:role/OCID

permissions:
  id-token: write
  contents: read

#Defining the jobs for deploying the website.
jobs:
  deploy:
    name: Deploy static site to S3 bucket
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.0 # Adjust to your desired version

      - name: Installing Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Adjust to your desired version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.OIDC_ARN }}
          role-session-name: git_role_session
          aws-region: ${{ env.AWS_REGION }}

      #Deploying S3 infrastructure.   
      - name: Terraform Init
        working-directory: infrabase/
        run: terraform init
  
      - name: Terraform Apply
        working-directory: infrabase/
        run: terraform apply -var-file="dev.tfvars" -auto-approve

      #Fetch the S3 bucket name from Terraform output
      - name: Get S3 Bucket Name
        id: fetch-terraform-output
        working-directory: infrabase/
        run: |
          echo "::set-output name=url::$(terraform output -raw bucket)"
      
      #Deploying website on S3 and install dependencies.
      - name: Install dependencies
        working-directory: codebase/my-app/
        run: npm install

      - name: Build App
        working-directory: codebase/my-app/ 
        run: npm run build
        
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./codebase/my-app/build/ "s3://${{ steps.fetch-terraform-output.outputs.url}}"